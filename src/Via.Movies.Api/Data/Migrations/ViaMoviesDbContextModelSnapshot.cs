// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Via.Movies.Api.Data;

#nullable disable

namespace Via.Movies.Api.Data.Migrations
{
    [DbContext(typeof(ViaMoviesDbContext))]
    partial class ViaMoviesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Via.Movies.Api.Models.Director", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.ToTable("directors", (string)null);
                });

            modelBuilder.Entity("Via.Movies.Api.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<long>("Year")
                        .HasColumnType("bigint")
                        .HasColumnName("year");

                    b.ToTable("movies", (string)null);
                });

            modelBuilder.Entity("Via.Movies.Api.Models.Person", b =>
                {
                    b.Property<long>("Birth")
                        .HasColumnType("bigint")
                        .HasColumnName("birth");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.ToTable("people", (string)null);
                });

            modelBuilder.Entity("Via.Movies.Api.Models.Rating", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<float>("Rating1")
                        .HasColumnType("real")
                        .HasColumnName("rating");

                    b.Property<int>("Votes")
                        .HasColumnType("integer")
                        .HasColumnName("votes");

                    b.ToTable("ratings", (string)null);
                });

            modelBuilder.Entity("Via.Movies.Api.Models.Star", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer")
                        .HasColumnName("person_id");

                    b.ToTable("stars", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
