name: Development Pipeline

on:
  push:
    branches: [dev]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        dotnet-version: ['7.x']

    env:
      ANGULAR_DIR: src/Via.Movies.Angular

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: |
          cd ${{ env.ANGULAR_DIR }}
          npm ci

      - name: Build Angular application
        run: |
          cd ${{ env.ANGULAR_DIR }}
          npm run build -- --configuration production

      - name: Test Angular project
        run: |
          cd ${{ env.ANGULAR_DIR }}
          npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore .NET dependencies
        run: dotnet restore

      - name: Build .NET project
        run: dotnet build --no-restore

      - name: Test .NET project
        run: dotnet test --no-build --verbosity normal
